<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Notes</title>
    <link>http://localhost:1313/NotesWebsite/</link>
    <description>Recent content on My Notes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Oct 2024 12:08:51 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/NotesWebsite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About me</title>
      <link>http://localhost:1313/NotesWebsite/about/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/about/</guid>
      <description>&lt;p&gt;Hey, this is some information about me&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boolean Algebra and Propositional Logic</title>
      <link>http://localhost:1313/NotesWebsite/kr/boolean-algebra-and-propositional-logic/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/kr/boolean-algebra-and-propositional-logic/</guid>
      <description>&lt;p&gt;Boolean algebra refers to the manipulation of truth values through logical operations.&#xA;We are gonna consider just 2 truth values&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;True &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;False &lt;code&gt;0&lt;/code&gt;&#xA;and 3 Boolean Operators to manipulate the values&lt;/li&gt;&#xA;&lt;li&gt;Conjunction (∧) &lt;code&gt;And&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Disjunction (∨) &lt;code&gt;Or&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Negation (¬) &lt;code&gt;Not&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In Boolean Algebra we compute complex expressions of Logic Operators containing variables&lt;/p&gt;&#xA;&lt;h1 id=&#34;propositional-logic&#34;&gt;Propositional Logic&lt;/h1&gt;&#xA;&lt;p&gt;Propositional logic is used to combine propositions and studying their truth values&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Atomic Propositions state one fact or one property &lt;code&gt;Mammals are vertebreae&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;formulas&#34;&gt;Formulas&lt;/h2&gt;&#xA;&lt;p&gt;==Formulas== are used to combine propositions&#xA;[[Logic]] is still a language so we must specify&lt;/p&gt;</description>
    </item>
    <item>
      <title>Computational Logic, from SAT to SMT</title>
      <link>http://localhost:1313/NotesWebsite/computational-logic/computational-logic-from-sat-to-smt/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/computational-logic/computational-logic-from-sat-to-smt/</guid>
      <description>&lt;h2 id=&#34;propositional-logic&#34;&gt;Propositional Logic&lt;/h2&gt;&#xA;&lt;p&gt;Refer to the KR notes on the same topic&lt;/p&gt;&#xA;&lt;p&gt;Remember that&#xA;$$\rightarrow means \space if, \space while\space \leftrightarrow \space means \space if \space and\space only\space if$$&#xA;Some expressions make perfect sense, like&#xA;$$(p\vee q) \rightarrow r$$&#xA;&lt;code&gt;If it rains (p) or it snows (q), then i will take an umbrella (r)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;while others are meaningless&#xA;$$pq)) \rightarrow r$$&lt;/p&gt;&#xA;&lt;h2 id=&#34;formula&#34;&gt;Formula&lt;/h2&gt;&#xA;&lt;p&gt;A formula is a string of characters which follows the following rules&#xA;$$ Every \space p \in L \space is \ a \ formula \ (rule \ n1)  $$$$  if \ all \ A,B&amp;rsquo;s \ are \ formulas, then \ (A \vee B) \ and \ (A \wedge B) \ are \ also \ formulas \ (rule \ n2)   $$&#xA;we can also create a tree from the main formula, where the nodes are built using rule 2 and the last elements using rule 1&lt;/p&gt;</description>
    </item>
    <item>
      <title>History of KR</title>
      <link>http://localhost:1313/NotesWebsite/kr/history-of-kr/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/kr/history-of-kr/</guid>
      <description>&lt;p&gt;History is deeply connected with recording techniques such as writing or oral traditions (humans always felt the need to transmit knowledge, `this was done trough myths, stories, etc.)&lt;/p&gt;&#xA;&lt;p&gt;Oral and written traditions preserve and propagate knowledge&#xA;traditions hardly resist the test of time, their meaning easily change, and they&amp;rsquo;re also very hard to update, the language could also result ambiguous&#xA;Our goal is to represent knowledge with guarantees without the need of Trained Interpreters (like in religious text)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to Computer Programming</title>
      <link>http://localhost:1313/NotesWebsite/computer-programming/books/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/computer-programming/books/</guid>
      <description>&lt;h1 id=&#34;history-of-computing-machines&#34;&gt;History of Computing Machines&lt;/h1&gt;&#xA;&lt;h3 id=&#34;pascaline&#34;&gt;Pascaline&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Digital, Non programmable machine based on gears&lt;/li&gt;&#xA;&lt;li&gt;Able to do simple operations like Addition and Subtraction&lt;/li&gt;&#xA;&lt;li&gt;Computations based on the discrete positions of the gears&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;differential-engine&#34;&gt;Differential Engine&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Digital, non programmable machine based on an Engine &lt;code&gt;who would have guessed&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Able to compute polynomial approximations through the compute of tables&lt;/li&gt;&#xA;&lt;li&gt;Evolved into the Analytical Engine, which was General purpose programmable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;z1&#34;&gt;Z1&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Digital, Partially programmable machine&lt;/li&gt;&#xA;&lt;li&gt;Able to compute the 4 basic operations (`division was doing trough looping)&lt;/li&gt;&#xA;&lt;li&gt;Later evolved into the Z3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;tr-48&#34;&gt;TR-48&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Analog, programmable computer based on transistors&lt;/li&gt;&#xA;&lt;li&gt;Used for simulation and process control&lt;/li&gt;&#xA;&lt;li&gt;Faster than Digital solutions of its time&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;von-neumann-architecture&#34;&gt;Von Neumann architecture&lt;/h1&gt;&#xA;&lt;p&gt;Most current computers are built on this&#xA;Programs and data are stored as numbers in memory&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logic</title>
      <link>http://localhost:1313/NotesWebsite/kr/logic/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/kr/logic/</guid>
      <description>&lt;p&gt;Type of language without the nuances (you write exactly whatever you mean , every sentence has 1 meaning)&#xA;we will use logic to manipulate knowledge, associating expressions with their meaning&lt;/p&gt;&#xA;&lt;p&gt;Reasoning needs ==guarantees&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;After reading the party examples from the slides (example of a constraint satisfaction problem)&lt;/code&gt;&#xA;We couldn&amp;rsquo;t respond to the question &amp;ldquo;Who&amp;rsquo;s invited as there isn&amp;rsquo;t a single viable answer&amp;rdquo;, however we can say for sure that the party is possible&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logic and Symbolic AI</title>
      <link>http://localhost:1313/NotesWebsite/kr/logic-and-symbolic-ai/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/kr/logic-and-symbolic-ai/</guid>
      <description>&lt;h1 id=&#34;intelligence&#34;&gt;Intelligence&lt;/h1&gt;&#xA;&lt;p&gt;AI deals with machines showing intelligent traits, isn&amp;rsquo;t equivalent to humane cognitive attributes&#xA;Humans work on 2 different thought processes; ==system 1 (reflexes, fast and intuitive) and system 2 (Used in thought, slow and more logical, takes effort and time)&lt;/p&gt;&#xA;&lt;p&gt;System 1 is useful for simple task but can be easily fooled (Pareidolia) it&amp;rsquo;s also hard wired and hard to modify it (In AI creation and modification of it can be very expensive as it needs time and repetition to build a strong muscle memory)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Measures, Introduction to Data and Error Analysis</title>
      <link>http://localhost:1313/NotesWebsite/physics/measures-introduction-to-data-and-error-analysis/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/physics/measures-introduction-to-data-and-error-analysis/</guid>
      <description>&lt;h2 id=&#34;error-analysis&#34;&gt;Error Analysis&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Calculate the mean between the different measures&lt;/li&gt;&#xA;&lt;li&gt;Calculate the residuals X&lt;sub&gt;n&lt;/sub&gt; - Mean of X&amp;rsquo;s &lt;code&gt;the sum of the residuals should approximate to 0, but its not a very good rapresentation&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Calculate the standard deviation &lt;code&gt;Rapresentation of how much the data deviates from the Mean value&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Standard deviation Formula&#xA;$$ S_x = \sqrt \frac{\sum^n_{i=1} (X_i - \bar x)^2}{n-1}$$&lt;/p&gt;&#xA;&lt;h2 id=&#34;representing-data&#34;&gt;Representing Data&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tables &lt;code&gt;not very efficient nor readable&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Histograms &lt;code&gt;Graphical rapresentation of Data, Easier to compare&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Normalized Histograms are used to represent the frequency of every measure, &lt;code&gt;The data is averaged in Bins, which range from 2 values&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Representing Knowledge as Rules</title>
      <link>http://localhost:1313/NotesWebsite/kr/representing-knowledge-as-rules/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/kr/representing-knowledge-as-rules/</guid>
      <description>&lt;p&gt;also see [[Boolean Algebra and Propositional Logic]]&lt;/p&gt;&#xA;&lt;h1 id=&#34;clauses&#34;&gt;Clauses&lt;/h1&gt;&#xA;&lt;p&gt;a clause is a ==disjunction== of literals &lt;code&gt;(variables or negated variables)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;some clauses&#xA;$$ x \vee y \vee \neg z $$&#xA;$$ \neg x \vee \neg y $$&lt;/p&gt;&#xA;&lt;h2 id=&#34;horn-clause&#34;&gt;Horn Clause&lt;/h2&gt;&#xA;&lt;p&gt;A Horn clause has at most 1 positive literal&lt;/p&gt;&#xA;&lt;p&gt;$x$&#xA;$x \vee \neg y \vee \neg z$&lt;/p&gt;&#xA;&lt;p&gt;We will represent Horn clauses in a different way&#xA;$(x_1 \wedge x_2 \wedge &amp;hellip; \wedge X_n) \rightarrow y$&#xA;Meaning if all X&amp;rsquo;s are true, then y must be true as well&lt;/p&gt;</description>
    </item>
    <item>
      <title>Some Definitions</title>
      <link>http://localhost:1313/NotesWebsite/calculus/some-definitions/</link>
      <pubDate>Sat, 05 Oct 2024 12:08:51 +0200</pubDate>
      <guid>http://localhost:1313/NotesWebsite/calculus/some-definitions/</guid>
      <description>&lt;p&gt;Bounded and unbounded Sets&#xA;$Q \supseteq A \rightarrow where \ A {2,3}, if \ exists \ a \ number \ such \ that \ 2&amp;lt;r \in Q &amp;lt;3, then \ A \ is \ a \ bounded  \ set$&#xA;Q couldn&amp;rsquo;t be a bounded set as  $Q = {-\infty, +\infty}$&lt;/p&gt;&#xA;&lt;p&gt;A Set can be bounded below, such that  $A = {0, +\infty }$, A Set can also be upwards bounded, such that$A = {-\infty, 2 }$&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
